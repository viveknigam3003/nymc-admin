{"version":3,"sources":["components/logo.png","components/Header.js","components/Logo.js","components/StudentImage.js","components/MemberCard.js","components/Form.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","useStyles","makeStyles","root","width","fontFamily","paddingTop","paddingBottom","title","fontSize","fontWeight","padding","sub","color","opacity","Header","classes","className","imgStyle","position","height","marginRight","display","alignItems","justifyContent","Logo","src","logoImage","alt","style","margin","borderStyle","borderWidth","borderColor","green","StudentImage","props","uploaded","dataURL","marginLeft","backgroundColor","marginTop","header","textAlign","paddingLeft","paddingRight","details","flexDirection","btn","values","cont","MemberCard","componentRef","useRef","info","name","issued","valid","start","end","image","ComponentToPrint","React","forwardRef","ref","id","fields","Fragment","Button","variant","size","onClick","exportComponentAsJPEG","Form","useState","setName","setIssued","setValid","setStart","setEnd","setImage","setUploaded","onSubmit","console","log","TextField","required","label","type","defaultValue","onChange","e","target","value","imageList","maxFileSize","acceptType","onError","errors","files","onImageUpload","onImageRemoveAll","ButtonGroup","disabled","left","bottom","text","Footer","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.6371c3aa.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.3091eb96.png\";","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core\";\n\nconst useStyles = makeStyles({\n  root: {\n    width: \"100%\",\n    fontFamily: \"Work Sans\",\n    paddingTop: 20,\n    paddingBottom: 20,\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 500,\n    padding: 10\n  },\n  sub: {\n    fontSize: 14,\n    color: \"#000000\",\n    opacity: 0.5,\n    fontWeight: 100\n  },\n});\n\nfunction Header() {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <div className={classes.title}>NYMC Membership Card</div>\n      <div className={classes.sub}>\n        Upload the image first and then fill in the candidate details\n      </div>\n    </div>\n  );\n}\n\nexport default Header;\n","import React from 'react'\nimport logoImage from \"./logo.png\";\n\nconst imgStyle = {\n    position: \"relative\",\n    height: 30,\n    marginRight: 20,\n    width: \"auto\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-start\",\n  };\n  \nfunction Logo() {\n    return <img src={logoImage} alt=\"logo\" style={imgStyle} />;\n}\n\nexport default Logo","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core\";\nimport { green } from \"@material-ui/core/colors\";\n\nconst useStyles = makeStyles({\n  root: {\n    position: \"relative\",\n    height: 50,\n    margin: 20,\n    width: \"auto\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-start\",\n    borderStyle: \"dotted\",\n    borderWidth: 1,\n    borderColor: green[400]\n  },\n});\n\nfunction StudentImage(props) {\n  const classes = useStyles();\n  return (\n    <img\n      src={props.uploaded ? props.src[0].dataURL : null}\n      alt=\"upd_img\"\n      className={classes.root}\n    />\n  );\n}\n\nexport default StudentImage;\n","import React, { useRef } from \"react\";\nimport { exportComponentAsJPEG } from \"react-component-export-image\";\n\nimport { makeStyles, Button } from \"@material-ui/core\";\nimport { green } from \"@material-ui/core/colors\";\nimport Logo from \"./Logo\";\nimport StudentImage from \"./StudentImage\";\n\nconst useStyles = makeStyles({\n  root: {\n    width: \"89mm\",\n    height: \"51mm\",\n    fontFamily: \"Work Sans\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    backgroundColor: \"#fffafa\",\n    marginTop: 20,\n    borderColor: green[400],\n    borderWidth: 2,\n    borderStyle: \"solid\",\n  },\n  header: {\n    display: \"flex\",\n    fontSize: 12,\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    padding: 10,\n    fontWeight: 500,\n    color: green[600],\n    paddingBottom: 0,\n  },\n  sub: {\n    textAlign: \"left\",\n    width: \"50%\",\n    fontFamily: \"Work Sans\",\n    fontSize: 10,\n    paddingLeft: 10,\n    paddingRight: 10,\n    color: \"#000000\",\n    opacity: 0.8,\n  },\n  details: {\n    padding: 10,\n    display: \"flex\",\n    height: \"30mm\",\n    alignItems: \"start\",\n    justifyContent: \"space-evenly\",\n    flexDirection: \"column\",\n    fontFamily: \"Work Sans\",\n    fontSize: 12,\n    fontWeight: 500,\n    opacity: 0.8,\n  },\n  btn: {\n    margin: 10,\n  },\n  values: {\n    color: \"#000000\",\n    opacity: 0.8,\n  },\n  cont: {\n    display: \"flex\",\n    alignItems: \"flex-start\",\n    justifyContent: \"space-between\",\n  },\n});\n\nfunction MemberCard(props) {\n  const classes = useStyles();\n  const componentRef = useRef();\n\n  const info = {\n    name: props.name,\n    issued: props.issued,\n    valid: props.valid,\n    start: props.start,\n    end: props.end,\n    image: props.image,\n    uploaded: props.uploaded\n  };\n\n  const ComponentToPrint = React.forwardRef((props, ref) => (\n    <div className={classes.root} ref={ref}>\n      <div id=\"header\" className={classes.header}>\n        <div id=\"company-name\">Nirmal Yoga and Meditation Center</div>\n        <Logo />\n      </div>\n      <div id=\"sub\" className={classes.sub}>\n        E-Membership Card\n      </div>\n      <div id=\"left\" className={classes.cont}>\n        <div id=\"details\" className={classes.details}>\n          <div id=\"name\" className={classes.fields}>\n            Name: <span className={classes.values}>{info.name}</span>{\" \"}\n          </div>\n          <div id=\"issued\" className={classes.fields}>\n            Issued: <span className={classes.values}>{info.issued}</span>{\" \"}\n          </div>\n          <div id=\"valid\" className={classes.fields}>\n            Valid Thru: <span className={classes.values}>{info.valid}</span>{\" \"}\n          </div>\n          <div id=\"start\" className={classes.fields}>\n            Plan Start: <span className={classes.values}>{info.start}</span>{\" \"}\n          </div>\n          <div id=\"end\" className={classes.fields}>\n            Plan End: <span className={classes.values}>{info.end}</span>{\" \"}\n          </div>\n        </div>\n        <StudentImage src={info.image} uploaded={info.uploaded}/>\n      </div>\n    </div>\n  ));\n\n  return (\n    <React.Fragment>\n      <ComponentToPrint ref={componentRef} />\n      <Button\n        color=\"primary\"\n        variant=\"contained\"\n        size=\"small\"\n        className={classes.btn}\n        onClick={() => exportComponentAsJPEG(componentRef)}\n      >\n        Save\n      </Button>\n    </React.Fragment>\n  );\n}\n\nexport default MemberCard;\n","import React, { useState } from \"react\";\nimport { TextField, makeStyles, Button, ButtonGroup } from \"@material-ui/core\";\nimport MemberCard from \"./MemberCard\";\nimport ImageUploading from \"react-images-uploading\";\n\nconst maxMbFileSize = 5 * 1024 * 1024;\n\nconst useStyles = makeStyles({\n  root: {\n    width: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    flexDirection: \"column\",\n  },\n});\n\nfunction Form() {\n  const classes = useStyles();\n  const [name, setName] = useState(\"\");\n  const [issued, setIssued] = useState(\"\");\n  const [valid, setValid] = useState(\"\");\n  const [start, setStart] = useState(\"\");\n  const [end, setEnd] = useState(\"\");\n  const [image, setImage] = useState([]);\n  const [uploaded, setUploaded] = useState(false)\n\n  const handleSubmit = () => console.log(\"YO\");\n\n  const onChange = (imageList) => {\n    setImage(imageList);\n    setUploaded(true)\n  };\n\n  const onError = (errors, files) => {\n    console.log(errors, files);\n  };\n\n  return (\n    <React.Fragment>\n      <form className={classes.root} id=\"member-form\" onSubmit={handleSubmit}>\n        <TextField\n          variant=\"outlined\"\n          margin=\"normal\"\n          required\n          name=\"name\"\n          label=\"Name\"\n          type=\"name\"\n          id=\"password\"\n          size=\"small\"\n          defaultValue={name}\n          onChange={(e) => setName(e.target.value)}\n        />\n        <TextField\n          variant=\"outlined\"\n          margin=\"normal\"\n          required\n          name=\"membership-start\"\n          label=\"Membership Start Date\"\n          type=\"membership-start\"\n          id=\"membership-start\"\n          size=\"small\"\n          defaultValue={issued}\n          onChange={(e) => setIssued(e.target.value)}\n        />\n        <TextField\n          variant=\"outlined\"\n          margin=\"normal\"\n          required\n          name=\"valid-through\"\n          label=\"Membership Valid Through\"\n          type=\"membership-end\"\n          id=\"membership-end\"\n          size=\"small\"\n          defaultValue={valid}\n          onChange={(e) => setValid(e.target.value)}\n        />\n        <TextField\n          variant=\"outlined\"\n          margin=\"normal\"\n          name=\"start-date\"\n          label=\"Plan Start Date\"\n          type=\"start-date\"\n          id=\"start-date\"\n          size=\"small\"\n          defaultValue={start}\n          onChange={(e) => setStart(e.target.value)}\n        />\n        <TextField\n          variant=\"outlined\"\n          margin=\"normal\"\n          name=\"endDate\"\n          label=\"Plan End Date\"\n          type=\"string\"\n          id=\"end-date\"\n          size=\"small\"\n          defaultValue={end}\n          onChange={(e) => setEnd(e.target.value)}\n        />\n        <div style={{fontFamily: \"Work Sans\", fontSize: 12, opacity: 0.8, padding: 10}}>Upload Candidate Image</div>\n        <ImageUploading\n          onChange={onChange}\n          maxFileSize={maxMbFileSize}\n          acceptType={[\"jpg\", \"gif\", \"png\"]}\n          onError={onError}\n        >\n          {({ onImageUpload, onImageRemoveAll }) => (\n            <ButtonGroup>\n              <Button variant=\"outlined\" color=\"primary\" onClick={onImageUpload}>Upload image</Button>\n              <Button variant=\"outlined\" color=\"secondary\" disabled={!uploaded} onClick={() => {setUploaded(false); return onImageRemoveAll}}>Remove image</Button>\n            </ButtonGroup>\n          )}\n        </ImageUploading>\n      </form>\n      <MemberCard\n        name={name}\n        issued={issued}\n        valid={valid}\n        start={start}\n        end={end}\n        image={image}\n        uploaded={uploaded}\n      />\n    </React.Fragment>\n  );\n}\n\nexport default Form;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core\";\nimport { grey, green } from \"@material-ui/core/colors\";\n\nconst useStyles = makeStyles({\n  root: {\n    position: \"relative\",\n    left: 0,\n    bottom: 0,\n    backgroundColor: green[\"A200\"],\n    color: \"#000000\",\n    width: \"100%\",\n    height: 50,\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  text: {\n    opacity: 0.8,\n    padding: 10,\n    fontSize: 10,\n    fontFamily: \"Work Sans\",\n  },\n});\n\nfunction Footer() {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <div className={classes.text}>Developed by Vivek Nigam (viveknigam3003) | 2020</div>\n    </div>\n  );\n}\n\nexport default Footer;\n","import React from \"react\";\nimport \"./App.css\";\nimport Header from \"./components/Header\";\nimport Form from \"./components/Form\";\nimport Footer from \"./components/Footer\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Form />\n      <Footer/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}