{"version":3,"sources":["components/logo.png","components/Header.js","components/Logo.js","components/MemberCard.js","components/Form.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","useStyles","makeStyles","root","width","fontSize","fontFamily","fontWeight","paddingTop","paddingBottom","Header","classes","className","imgStyle","position","height","marginRight","display","alignItems","justifyContent","Logo","src","logoImage","alt","style","marginLeft","backgroundColor","marginTop","borderColor","green","borderWidth","borderStyle","header","padding","color","sub","textAlign","paddingLeft","paddingRight","details","flexDirection","opacity","btn","margin","MemberCard","props","componentRef","useRef","info","name","issued","valid","start","end","ComponentToPrint","React","forwardRef","ref","id","fields","Fragment","Button","variant","size","onClick","exportComponentAsJPEG","Form","useState","setName","setIssued","setValid","setStart","setEnd","onSubmit","console","log","TextField","required","label","type","onChange","e","target","value","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.4657a6e7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.3091eb96.png\";","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core\";\n\nconst useStyles = makeStyles({\n    root: {\n        width: \"100%\",\n        fontSize: 24,\n        fontFamily: \"Work Sans\",\n        fontWeight: 500,\n        paddingTop: 20,\n        paddingBottom: 20\n    }\n});\n\nfunction Header() {\n  const classes = useStyles();\n  return <div className={classes.root}>NYMC Online</div>;\n}\n\nexport default Header;\n","import React from 'react'\nimport logoImage from \"./logo.png\";\n\nconst imgStyle = {\n    position: \"relative\",\n    height: 30,\n    marginRight: 20,\n    width: \"auto\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-start\",\n  };\n  \nfunction Logo() {\n    return <img src={logoImage} alt=\"logo\" style={imgStyle} />;\n}\n\nexport default Logo","import React, { useRef } from \"react\";\nimport { exportComponentAsJPEG } from \"react-component-export-image\";\n\nimport { makeStyles, Button } from \"@material-ui/core\";\nimport { green } from \"@material-ui/core/colors\";\nimport Logo from \"./Logo\";\n\nconst useStyles = makeStyles({\n  root: {\n    width: \"89mm\",\n    height: \"51mm\",\n    fontFamily: \"Work Sans\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    backgroundColor: \"#fffafa\",\n    marginTop: 20,\n    borderColor: green[400],\n    borderWidth: 2,\n    borderStyle: \"solid\",\n  },\n  header: {\n    display: \"flex\",\n    fontSize: 12,\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    padding: 10,\n    fontWeight: 500,\n    color: green[600],\n    paddingBottom: 0,\n  },\n  sub: {\n    textAlign: \"left\",\n    width: \"50%\",\n    fontFamily: \"Open Sans\",\n    fontSize: 10,\n    paddingLeft: 10,\n    paddingRight: 10,\n  },\n  details: {\n    padding: 10,\n    display: \"flex\",\n    height: \"30mm\",\n    alignItems: \"start\",\n    justifyContent: \"space-between\",\n    flexDirection: \"column\",\n    fontFamily: \"Work Sans\",\n    fontSize: 12,\n    fontWeight: 500,\n    opacity: 0.8,\n    color: green[800],\n  },\n  btn: {\n    margin: 10,\n  },\n});\n\nfunction MemberCard(props) {\n  const classes = useStyles();\n  const componentRef = useRef();\n\n  const info = {\n    name: props.name,\n    issued: props.issued,\n    valid: props.valid,\n    start: props.start,\n    end: props.end,\n  };\n\n  const ComponentToPrint = React.forwardRef((props, ref) => (\n    <div className={classes.root} ref={ref}>\n      <div id=\"header\" className={classes.header}>\n        <div id=\"company-name\">Nirmal Yoga and Meditation Center</div>\n        <Logo />\n      </div>\n      <div id=\"sub\" className={classes.sub}>\n        E-Membership Card\n      </div>\n      <div id=\"details\" className={classes.details}>\n        <div id=\"name\" className={classes.fields}>\n          Name: {info.name}{\" \"}\n        </div>\n        <div id=\"issued\" className={classes.fields}>\n          Issued: {info.issued}{\" \"}\n        </div>\n        <div id=\"valid\" className={classes.fields}>\n          Valid Thru: {info.valid}{\" \"}\n        </div>\n        <div id=\"start\" className={classes.fields}>\n          Plan Start: {info.start}{\" \"}\n        </div>\n        <div id=\"end\" className={classes.fields}>\n          Plan End: {info.end}{\" \"}\n        </div>\n      </div>\n    </div>\n  ));\n\n  return (\n    <React.Fragment>\n      <ComponentToPrint ref={componentRef} />\n      <Button\n        color=\"primary\"\n        variant=\"contained\"\n        size=\"small\"\n        className={classes.btn}\n        onClick={() => exportComponentAsJPEG(componentRef)}\n      >\n        Save\n      </Button>\n    </React.Fragment>\n  );\n}\n\nexport default MemberCard;\n","import React, { useState } from \"react\";\nimport { TextField, makeStyles } from \"@material-ui/core\";\nimport MemberCard from \"./MemberCard\";\n\nconst useStyles = makeStyles({\n  root: {\n    width: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    flexDirection: \"column\",\n  },\n});\n\nfunction Form() {\n  const classes = useStyles();\n  const [name, setName] = useState(\"\");\n  const [issued, setIssued] = useState(\"\");\n  const [valid, setValid] = useState(\"\");\n  const [start, setStart] = useState(\"\");\n  const [end, setEnd] = useState(\"\");\n\n  const handleSubmit = () => console.log(\"YO\");\n\n  return (\n    <React.Fragment>\n      <form className={classes.root} id=\"member-form\" onSubmit={handleSubmit}>\n        <TextField\n          variant=\"outlined\"\n          margin=\"normal\"\n          required\n          name=\"name\"\n          label=\"Name\"\n          type=\"name\"\n          id=\"password\"\n          size=\"small\"\n          onChange={(e) => setName(e.target.value)}\n        />\n        <TextField\n          variant=\"outlined\"\n          margin=\"normal\"\n          required\n          name=\"membership-start\"\n          label=\"Membership Start Date\"\n          type=\"membership-start\"\n          id=\"membership-start\"\n          size=\"small\"\n          onChange={(e) => setIssued(e.target.value)}\n        />\n        <TextField\n          variant=\"outlined\"\n          margin=\"normal\"\n          required\n          name=\"valid-through\"\n          label=\"Membership Valid Through\"\n          type=\"membership-end\"\n          id=\"membership-end\"\n          size=\"small\"\n          onChange={(e) => setValid(e.target.value)}\n        />\n        <TextField\n          variant=\"outlined\"\n          margin=\"normal\"\n          name=\"start-date\"\n          label=\"Plan Start Date\"\n          type=\"start-date\"\n          id=\"start-date\"\n          size=\"small\"\n          onChange={(e) => setStart(e.target.value)}\n        />\n        <TextField\n          variant=\"outlined\"\n          margin=\"normal\"\n          name=\"endDate\"\n          label=\"Plan End Date\"\n          type=\"string\"\n          id=\"end-date\"\n          size=\"small\"\n          onChange={(e) => setEnd(e.target.value)}\n        />\n      </form>\n      <MemberCard\n        name={name}\n        issued={issued}\n        valid={valid}\n        start={start}\n        end={end}\n      />\n    </React.Fragment>\n  );\n}\n\nexport default Form;\n","import React from \"react\";\nimport \"./App.css\";\nimport Header from \"./components/Header\";\nimport Form from \"./components/Form\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Form />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}